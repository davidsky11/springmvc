<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/2002/xmlspec/dtd/2.10/xmlspec.dtd">
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
			http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.2.xsd
			http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
     		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd" >
			
	<description>Spring公共配置</description>
	
	<context:annotation-config />
	
	<!-- 扫描加载除了@Controller以外的组件 -->
	<context:component-scan base-package="com.fsvm" use-default-filters="false" >
		<context:exclude-filter type="annotation" expression="com.fsvm.controller" />
	</context:component-scan>
	
	<!-- 定义数据源连接 -->
	<!-- <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.properties}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="50" />
        <property name="maxIdle" value="30" />
        <property name="maxWait" value="5000" />
        <property name="validationQuery" value="select 1" />
        <property name="testOnBorrow" value="true" />
	</bean> -->
	
	<!-- 定义SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:configs/mybatis-config.xml" />
		<property name="typeAliasesPackage" value="com.kv.model" />
		<property name="typeAliases" value="org.springframework.util.LinkedCaseInsensitiveMap" />
	
		<property name="mapperLocations">
			<list>
				<value>classpath:com/kv/model/*.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置SqlSessionTemplate -->  
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />  
    </bean>

 	<!-- 定义事务控制器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 开启注解方式声明事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder ignore-resource-not-found="false" location="classpath*:/jdbc.properties" />
		
		<!-- 数据源配置，使用DBCP数据库连接池 -->
		<bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="driverClassName" value="${jdbc.properties}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="maxActive" value="50" />
	        <property name="maxIdle" value="30" />
	        <property name="maxWait" value="5000" />
	        <property name="validationQuery" value="select 1" />
	        <property name="testOnBorrow" value="true" />
		</bean>
		
		<!-- 数据源配置，使用应用内的C3P0数据库连接池 -->
		<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="jdbcUrl" value="${jdbc.url}" />
			<prrperty name="user" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		</bean> -->
	</beans>
	
	<!-- ///////////////////////////////// AOP SETUP AREA //////////////////////////////////////// -->
		
	<!-- 权限控制器 -->
	
	<!-- 权限管控 -->

	<!-- 事务控制 -->
	
	<!-- 自动代理 -->
	
	<!-- 导入restful配置文件 -->
	<!-- <import resource="classpath:configs/rest-servlet.xml"/> -->
	
	<!-- Import apache CXF bean definition -->  
    <!-- <import resource="classpath:META-INF/cxf/cxf.xml" />  
    <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" /> 
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	
	<bean id="ps" class="com.fsvm.web.rest.PersonServiceImpl" />
	<jaxrs:server id="personService" address="/rest">
		<jaxrs:serviceBeans>
			<ref bean="ps" />
		</jaxrs:serviceBeans>
		<jaxrs:inInterceptors>
            <bean class="org.apache.cxf.interceptor.LoggingInInterceptor"></bean>
         </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <bean class="org.apache.cxf.interceptor.LoggingOutInterceptor"></bean>
        </jaxrs:outInterceptors>
        <jaxrs:extensionMappings>
        	<entry key="json" value="application/json" />
        </jaxrs:extensionMappings>
	</jaxrs:server> -->
	
</beans>